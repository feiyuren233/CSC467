Grammar

    0 $accept: program $end

    1 program: tokens

    2 tokens: tokens token
    3       | %empty

    4 token: INT
    5      | FLOAT
    6      | ID
    7      | WHOLEN
    8      | REALN
    9      | BOOL
   10      | VEC2
   11      | VEC3
   12      | VEC4
   13      | BVEC2
   14      | BVEC3
   15      | BVEC4
   16      | IVEC2
   17      | IVEC3
   18      | IVEC4
   19      | CONST
   20      | DP3
   21      | LIT
   22      | RSQ
   23      | LP
   24      | RP
   25      | LB
   26      | RB
   27      | LSB
   28      | RSB
   29      | COMMA
   30      | SEMI
   31      | PLUS
   32      | MINUS
   33      | MULT
   34      | DIV
   35      | EXP
   36      | EQ
   37      | OR
   38      | AND
   39      | NOT
   40      | NE
   41      | LT
   42      | LE
   43      | GT
   44      | GE
   45      | ASSIGN
   46      | TRUEV
   47      | FALSEV
   48      | IF
   49      | ELSE
   50      | WHILE


Terminals, with rules where they appear

$end (0) 0
error (256)
INT (258) 4
FLOAT (259) 5
ID (260) 6
WHOLEN (261) 7
REALN (262) 8
BOOL (263) 9
VEC2 (264) 10
VEC3 (265) 11
VEC4 (266) 12
BVEC2 (267) 13
BVEC3 (268) 14
BVEC4 (269) 15
IVEC2 (270) 16
IVEC3 (271) 17
IVEC4 (272) 18
CONST (273) 19
DP3 (274) 20
LIT (275) 21
RSQ (276) 22
LP (277) 23
RP (278) 24
LB (279) 25
RB (280) 26
LSB (281) 27
RSB (282) 28
COMMA (283) 29
SEMI (284) 30
PLUS (285) 31
MINUS (286) 32
MULT (287) 33
DIV (288) 34
EXP (289) 35
EQ (290) 36
OR (291) 37
AND (292) 38
NOT (293) 39
NE (294) 40
LT (295) 41
LE (296) 42
GT (297) 43
GE (298) 44
ASSIGN (299) 45
TRUEV (300) 46
FALSEV (301) 47
IF (302) 48
ELSE (303) 49
WHILE (304) 50


Nonterminals, with rules where they appear

$accept (50)
    on left: 0
program (51)
    on left: 1, on right: 0
tokens (52)
    on left: 2 3, on right: 1 2
token (53)
    on left: 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
    24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44
    45 46 47 48 49 50, on right: 2


State 0

    0 $accept: . program $end

    $default  reduce using rule 3 (tokens)

    program  go to state 1
    tokens   go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: tokens .
    2 tokens: tokens . token

    INT     shift, and go to state 4
    FLOAT   shift, and go to state 5
    ID      shift, and go to state 6
    WHOLEN  shift, and go to state 7
    REALN   shift, and go to state 8
    BOOL    shift, and go to state 9
    VEC2    shift, and go to state 10
    VEC3    shift, and go to state 11
    VEC4    shift, and go to state 12
    BVEC2   shift, and go to state 13
    BVEC3   shift, and go to state 14
    BVEC4   shift, and go to state 15
    IVEC2   shift, and go to state 16
    IVEC3   shift, and go to state 17
    IVEC4   shift, and go to state 18
    CONST   shift, and go to state 19
    DP3     shift, and go to state 20
    LIT     shift, and go to state 21
    RSQ     shift, and go to state 22
    LP      shift, and go to state 23
    RP      shift, and go to state 24
    LB      shift, and go to state 25
    RB      shift, and go to state 26
    LSB     shift, and go to state 27
    RSB     shift, and go to state 28
    COMMA   shift, and go to state 29
    SEMI    shift, and go to state 30
    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32
    MULT    shift, and go to state 33
    DIV     shift, and go to state 34
    EXP     shift, and go to state 35
    EQ      shift, and go to state 36
    OR      shift, and go to state 37
    AND     shift, and go to state 38
    NOT     shift, and go to state 39
    NE      shift, and go to state 40
    LT      shift, and go to state 41
    LE      shift, and go to state 42
    GT      shift, and go to state 43
    GE      shift, and go to state 44
    ASSIGN  shift, and go to state 45
    TRUEV   shift, and go to state 46
    FALSEV  shift, and go to state 47
    IF      shift, and go to state 48
    ELSE    shift, and go to state 49
    WHILE   shift, and go to state 50

    $default  reduce using rule 1 (program)

    token  go to state 51


State 3

    0 $accept: program $end .

    $default  accept


State 4

    4 token: INT .

    $default  reduce using rule 4 (token)


State 5

    5 token: FLOAT .

    $default  reduce using rule 5 (token)


State 6

    6 token: ID .

    $default  reduce using rule 6 (token)


State 7

    7 token: WHOLEN .

    $default  reduce using rule 7 (token)


State 8

    8 token: REALN .

    $default  reduce using rule 8 (token)


State 9

    9 token: BOOL .

    $default  reduce using rule 9 (token)


State 10

   10 token: VEC2 .

    $default  reduce using rule 10 (token)


State 11

   11 token: VEC3 .

    $default  reduce using rule 11 (token)


State 12

   12 token: VEC4 .

    $default  reduce using rule 12 (token)


State 13

   13 token: BVEC2 .

    $default  reduce using rule 13 (token)


State 14

   14 token: BVEC3 .

    $default  reduce using rule 14 (token)


State 15

   15 token: BVEC4 .

    $default  reduce using rule 15 (token)


State 16

   16 token: IVEC2 .

    $default  reduce using rule 16 (token)


State 17

   17 token: IVEC3 .

    $default  reduce using rule 17 (token)


State 18

   18 token: IVEC4 .

    $default  reduce using rule 18 (token)


State 19

   19 token: CONST .

    $default  reduce using rule 19 (token)


State 20

   20 token: DP3 .

    $default  reduce using rule 20 (token)


State 21

   21 token: LIT .

    $default  reduce using rule 21 (token)


State 22

   22 token: RSQ .

    $default  reduce using rule 22 (token)


State 23

   23 token: LP .

    $default  reduce using rule 23 (token)


State 24

   24 token: RP .

    $default  reduce using rule 24 (token)


State 25

   25 token: LB .

    $default  reduce using rule 25 (token)


State 26

   26 token: RB .

    $default  reduce using rule 26 (token)


State 27

   27 token: LSB .

    $default  reduce using rule 27 (token)


State 28

   28 token: RSB .

    $default  reduce using rule 28 (token)


State 29

   29 token: COMMA .

    $default  reduce using rule 29 (token)


State 30

   30 token: SEMI .

    $default  reduce using rule 30 (token)


State 31

   31 token: PLUS .

    $default  reduce using rule 31 (token)


State 32

   32 token: MINUS .

    $default  reduce using rule 32 (token)


State 33

   33 token: MULT .

    $default  reduce using rule 33 (token)


State 34

   34 token: DIV .

    $default  reduce using rule 34 (token)


State 35

   35 token: EXP .

    $default  reduce using rule 35 (token)


State 36

   36 token: EQ .

    $default  reduce using rule 36 (token)


State 37

   37 token: OR .

    $default  reduce using rule 37 (token)


State 38

   38 token: AND .

    $default  reduce using rule 38 (token)


State 39

   39 token: NOT .

    $default  reduce using rule 39 (token)


State 40

   40 token: NE .

    $default  reduce using rule 40 (token)


State 41

   41 token: LT .

    $default  reduce using rule 41 (token)


State 42

   42 token: LE .

    $default  reduce using rule 42 (token)


State 43

   43 token: GT .

    $default  reduce using rule 43 (token)


State 44

   44 token: GE .

    $default  reduce using rule 44 (token)


State 45

   45 token: ASSIGN .

    $default  reduce using rule 45 (token)


State 46

   46 token: TRUEV .

    $default  reduce using rule 46 (token)


State 47

   47 token: FALSEV .

    $default  reduce using rule 47 (token)


State 48

   48 token: IF .

    $default  reduce using rule 48 (token)


State 49

   49 token: ELSE .

    $default  reduce using rule 49 (token)


State 50

   50 token: WHILE .

    $default  reduce using rule 50 (token)


State 51

    2 tokens: tokens token .

    $default  reduce using rule 2 (tokens)
